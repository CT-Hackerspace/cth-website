---
import { SITE_TITLE } from "../consts";
import HeaderLink from "./HeaderLink.astro";

import * as fs from "node:fs/promises";
import * as path from "node:path";

const dir = await fs.readdir("./src/pages", {
  withFileTypes: true,
});

/*
    <HeaderLink href="/tools">Tools &amp; Equipment</HeaderLink>
    <HeaderLink href="/membership">Membership</HeaderLink>
    <HeaderLink href="/visit">Visit</HeaderLink>
    <HeaderLink href="/events">Events</HeaderLink>
    <HeaderLink href="/blog">Blog</HeaderLink>
*/

const markdownFiles = dir
  .filter((e) => e.isFile())
  .filter((e) => e.name.endsWith(".md"))
  .filter((e) => !e.name.startsWith("index"));

const dash = /\-/g;
const lowercase = /^[a-z]| [a-z]/g;

const headerLinks = markdownFiles.map((e) => {
  const { ext, name } = path.parse(e.name);

  const linkDesc = name
    .replace(dash, " ")
    .replace(lowercase, (e) => e.toUpperCase());
  return {
    id: `/${name}`,
    desc: linkDesc,
  };
});
---

<header>
    <nav>
        <a class="brand-link" href="/">
            <img class="brand" src="/CTHLogo.png" alt="CT Hackerspace" />
        </a>
        <label for="main-menu" class="navbar-toggle">üçî</label>
        <input id="main-menu" type="checkbox" />
        <ul>
            <HeaderLink href="/">Home</HeaderLink>
            <HeaderLink href="/blog">Blog</HeaderLink>
            {headerLinks.map(e => <HeaderLink href={e.id}>{e.desc}</HeaderLink>)}
        </ul>
    </nav>
</header>
<style lang="scss">
    @use "../styles/_variables";
    @use "../styles/_breakpoints";

    header {
        flex-grow: 0;
    }
    nav {
        display: flex;
        justify-content: space-between;
        background-color: #343a40;
        box-shadow: black 0px 1px 5px -1px;
        img.brand {
            margin: 7px 9px;
            height: 42px;
        }

        input[type="checkbox"],
        .navbar-toggle {
            display: none;
        }

        ul {
            display: flex;
            align-items: stretch;
            gap: 1rem;
            padding: 0 1rem;
            list-style: none;
        }
        @include breakpoints.media-breakpoint-down(md) {
            flex-wrap: wrap;

            .brand-link {
                align-self: flex-start;
                background-color: variables.$nav-button-bg;

                &:hover {
                    background-color: variables.$nav-button-hover-bg;
                }

                &:active {
                    background-color: variables.$nav-button-active-bg;
                }
            }

            .navbar-toggle {
                display: flex;
                align-items: center;
                justify-content: center;
                margin: 0.5rem;
                width: 3.5rem;
                height: 2.5rem;
                align-self: flex-end;
                background-color: variables.$nav-button-bg;
                border: 1px solid #ced4db;
                border-radius: 0.25rem;

                &:hover {
                    background-color: variables.$nav-button-hover-bg;
                }

                &:active {
                    background-color: variables.$nav-button-active-bg;
                }
            }

            input[type="checkbox"]:not(:checked) + ul {
                max-height: 0;
            }
            ul {
                display: flex;
                flex-direction: column;
                gap: 0;
                padding: 0;
                overflow: hidden;
                width: 100%;
                max-height: 5000px;
                transition: max-height cubic-bezier(1, 0, 0, 1) 0.35s;
            }
        }
    }
</style>
