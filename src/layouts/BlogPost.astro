---
import { type CollectionEntry, getEntry } from "astro:content";
import { Breadcrumbs } from "astro-breadcrumbs";
// @ts-ignore
import { JSDOM } from "jsdom";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Header from "../components/Header.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, date, author, slug } = Astro.props;
const entry = await getEntry("blog", slug);
const dom = entry?.rendered?.html ?? "";
const fakePage = new JSDOM(dom);
// @ts-ignore
const imageSrc = fakePage.window.document.querySelector("img[src]")?.src;
---

<html lang="en">
    <head>
        <BaseHead title={title} description={description ?? "The first and oldest makerspace in CT!"} image={imageSrc} />
        <style lang="scss">
            title > h1 {
                margin-bottom: 0.5em;
            }
            .prose {
                margin-top: 1.5rem;
                display: flex;
                flex-wrap: wrap;
                flex-direction: column;
                align-content: flex-start;
                gap: 1rem;
                width: 100%;
            }
            .date {
                font-size: 0.75rem;
                text-decoration: none;
                line-height: 1;
                margin-bottom: 0.35rem;
            }
        </style>
    </head>

    <body itemscope itemtype="http://schema.org/WebPage">
        <Header />
        <main itemscope itemtype="http://schema.org/Blog">
            <article
            itemscope
            itemtype="https://schema.org/BlogPosting"
            itemprop=""
            >
                <h1 itemscope itemprop="headline">{title}</h1>
                <div class="title">
                    <div class="date">
                        {date ? <>Posted on <FormattedDate date={date} /></> : ""}
                        by {author}
                    </div>
                </div>
                <Breadcrumbs ariaLabel="a structured list of navigation links" debug={true} linkTextFormat="capitalized">
                    <svg
                        slot="separator"
                        xmlns="http://www.w3.org/2000/svg"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        ><polyline points="9 18 15 12 9 6"></polyline>
                    </svg>
                </Breadcrumbs>
                <div class="prose">
                    <slot itemscope itemprop="articleBody"/>
                </div>
                
                    <div class="hero-image">
                        {/* 
                            heroImage && (
                                <img
                                    width={1020}
                                    height={510}
                                    src={heroImage}
                                    alt=""
                                />
                            )
                        }
                        */} 
                    </div>
                    
                </article>
            </main>
        <Footer />
    </body>
</html>
